// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @db.VarChar(255)
  login     String @db.VarChar(255)
  version   Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  password  String @db.VarChar(255)
}

model Track {
  id          String     @id @db.VarChar(255)
  name        String     @db.VarChar(255)
  artist      Artist?    @relation(fields: [artistId], references: [id])
  artistId    String?    @db.VarChar(255)
  album       Album?     @relation(fields: [albumId], references: [id])
  albumId     String?    @db.VarChar(255)
  duration    Int
  Favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId Int?
}

model Album {
  id          String     @id @db.VarChar(255)
  name        String     @db.VarChar(255)
  year        Int
  artist      Artist?    @relation(fields: [artistId], references: [id])
  artistId    String?    @db.VarChar(255)
  Track       Track[]
  Favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId Int?
}

model Artist {
  id          String     @id @db.VarChar(255)
  name        String     @db.VarChar(255)
  grammy      Boolean
  Track       Track[]
  Album       Album[]
  Favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId Int?
}

model Favorites {
  id      Int      @id @default(autoincrement())
  artists Artist[]
  albums  Album[]
  tracks  Track[]
}
